syntax = "proto3";

package chat;

// Structure for client to client messaging
message Note {
    string sender = 1;
    string recipient = 2;
    string message = 3;
}

// Structure for client to client messaging
// Mirrors wire protocol client-server message
message Response {
  string message = 1;
  int32 status = 2;
  int32 sender = 3;
}

// The request message containing the user's name.
// Used for account creation, login, validation
message UserName {
  string name = 1;
}

// simple string definition, used for list
message String {
  string message = 1;
}

message Empty {}

// The greeting service definition.
service Greeter {
  rpc ChatStream (UserName) returns (stream Note);
  rpc SendNote (Note) returns (Response);
  rpc ListAccounts (String) returns (Response);
  rpc DeleteAccount (UserName) returns (Response);
  rpc CreateAccount (UserName) returns (Response);
  rpc Login (UserName) returns (Response);
  rpc Disconnect (UserName) returns (Response);
}
